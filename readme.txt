
cupaloy init ~/archive
cupaloy scan ~/archive
cupaloy list volumes
cupaloy list collections
cupaloy status

3 collections.
1 (Huggs Archive) is online, replicated twice locally and once remotely.
1 (PuzzlingPlans) is online, not replicated.
1 (AncientStuff) is offline, last seen 30 days ago.


NAME		Replicas	Where?		Coverage	Last check
---
Huggs Archive	2		local/remote	100%		2 days ago


DEFINITIONS

A Collection is a set of files found at one or more Locations, meant to be
backed up/mirrored.  A Collection has a UUID, which is either randomly
assigned, directly assigned by user, or derived from a Location.  It also
has a name.

A Location is a directory on a filesystem or a URL which refers to a set of
files.  The URL can either contain the UUID for a mounted volume or a
network location.  Paths are relative to the mounted volume or network
location root.  A Location can also be assigned a name which can be used as
an alias.

A Snapshot is a scan of a Collection at a given Location. A Snapshot
contains details about the scan results, scan duration, and scan options. 
It also records the last known names of the Collection and Location, and the
host name performing the scan.

A Snapshot can have real and virtual folders. Real files are directly
contained. Virtual files are indirectly contained in archive files or
other file containers.

Files are located in folders, and have a folder path and filename. Files
have a size and last known modification timestamp.  Files may also have a
hash checksum, split into two parts (first 128 and last 384 bits of the
SHA512 digest)

A Collection or Location can have one or more tags. Tags can be used to
select collections and/or locations.


STATUS

Check
- file/size match coverage
- hash match coverage
- timestamp match coverage
- last check for each replica
- replica count
- replica mixture
- # errors
- file access bits for online storage
- media type
- file format

Score/identifier for each check


NODES


FILES

$ARCHIVE/.cupaloy/collection.json
~/.cupaloy/$NODE/$UUID.db
~/.cupaloy/collections.db


VOLUMES

Identified by UUID
Friendly name


COLLECTIONS

read/write: UUID generated by init
read-only: UUID generated by metadata checksum/volume label/url

friendly name

location
- url
- node/path


TAGS

online/offline vs permanent/transient/removable
hd/ssd/tape/cloud/etc
dynamic/static
location tags? work/home/etc

should inform longevity, risk, etc


SCHEMA

files
folders
hashes
scans
locations
tags


(scannode,uuid,url,volume?)


PROTECTION

obfuscate path, name, size, etc?
- can still parse dir structure
archive metadata can itself be archived


USABILITY

look at file signatures/formats
parse files (archives for instance)
run tests (make tests for instance)


HIERARCHY

Can have workspace containing git repos, match many-to-many collections


BROADCAST

challenge/response
- quickly find relevant collections
- quickly find relevant files
- quickly check checksums
- quickly find differences


ISSUES

timestamp, uuid differ on exfat from osx/linux
need to identify node in location
- better short id for collectionlocation
what if computer name changes?
what if file path changes?
- when does config file have to be checked?
- what if removable drive and files are not at same path?
- what if mount changes?
how to retire a collection/location?
what char. set for archives?
https://docs.python.org/2/library/argparse.html#module-argparse
http://stackoverflow.com/questions/10410180/sqlite-view-across-multiple-databases
what if one location has real files and other in archives?
clear memory db after every op?
filter by collection and file name/metadata
reject dups that are on same media
warn/ignore if file has wrong extension (.zip)
estimate progress from last scan
real/virtual duplicate checking combinations
progress for scanning inside archives
4 GB zip files?
inline include/excludes
prettier/more accurate progress, integrate w/ logging, ansi/vt-aware
identify file characteristics/archive contents from hash code
can only rename directory-based collection
sentinel files for DropBox/other sync tools?
- note that sync tools can mess up across multiple computers...
- parse .dropbox file (same across shares)
filter 'dups' results?
better unicode solution (http://stackoverflow.com/questions/492483/setting-the-correct-encoding-when-piping-stdout-in-python)
NTFS has no UUID for NTFS volumes (http://stackoverflow.com/questions/17612596/not-getting-uuid-from-diskutil-on-osx)

find /home/huggvey/.cupaloy/collections -name '*.db' -exec sqlite3 \{\} ".read upgrade2.sql" \;
